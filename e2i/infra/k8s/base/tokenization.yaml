---
# Tokenization Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tokenization-service
  namespace: datawarehouse
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tokenization-service
  template:
    metadata:
      labels:
        app: tokenization-service
    spec:
      initContainers:
      - name: wait-for-postgres
        image: postgres:16
        command: ['sh', '-c', 'until pg_isready -h tokenization-postgres -p 5432 -U tokenization_user; do echo waiting for postgres; sleep 2; done;']
      containers:
      - name: tokenization-service
        image: your-registry/tokenization-service:latest  # Update with your actual image
        ports:
        - containerPort: 8004
        env:
        - name: TOKENIZATION_API_KEY
          valueFrom:
            configMapKeyRef:
              name: tokenization-config
              key: TOKENIZATION_API_KEY
        - name: TOKENIZATION_SALT
          valueFrom:
            configMapKeyRef:
              name: tokenization-config
              key: TOKENIZATION_SALT
        - name: TOKENIZATION_DB_URL
          valueFrom:
            configMapKeyRef:
              name: tokenization-config
              key: TOKENIZATION_DB_URL
        livenessProbe:
          httpGet:
            path: /api/v1/health
            port: 8004
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /api/v1/health
            port: 8004
          initialDelaySeconds: 10
          periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: tokenization-service
  namespace: datawarehouse
spec:
  selector:
    app: tokenization-service
  ports:
  - port: 8004
    targetPort: 8004
  type: ClusterIP
